import java.util.Scanner;
import java.util.Arrays;

public class LabProgram {

   public static void main(String[] args) {

      Scanner userInput = new Scanner(System.in);

      int diceValues[] = new int[5];
      int highScore = 0;

      for (int i = 0; i < diceValues.length; ++i) {
         diceValues[i] = userInput.nextInt();
      }

      Arrays.sort(diceValues);

      highScore = findHighScore(diceValues);
      System.out.println("High score: " + highScore);

   }

   public static int findHighScore(int dice[]) {

      int highScore = 0;
      for (int i = 1; i <= 6; i++) {
         int score = checkSingles(dice, i);
         if (score > highScore) {
            highScore = score;
         }
      }

      int threeOfKindScore = checkThreeOfKind(dice);
      if (threeOfKindScore > highScore) {
         highScore = threeOfKindScore;
      }

      int fourOfKindScore = checkFourOfKind(dice);
      if (fourOfKindScore > highScore) {
         highScore = fourOfKindScore;
      }

      int fiveOfKindScore = checkFiveOfKind(dice);
      if (fiveOfKindScore > highScore) {
         highScore = fiveOfKindScore;
      }

      int fullHouseScore = checkFullHouse(dice);
      if (fullHouseScore > highScore) {
         highScore = fullHouseScore;
      }

      int straightScore = checkStraight(dice);
      if (straightScore > highScore) {
         highScore = straightScore;
      }

      return highScore;

   }
   
   public static int checkSingles(int dice[], int goal) {
      int sum = 0;
      for (int i = 0; i < dice.length; i++) {
         if (dice[i] == goal) {
            sum += goal;
         }
      }

      return sum;

   }
   
   public static int checkThreeOfKind(int dice[]) {
      for (int i = 0; i < dice.length - 2; i++) {
         if (dice[i] == dice[i+1] && dice[i] == dice[i+2]) {
            return 30;
         }
      }

      return 0;

   }
   
   public static int checkFourOfKind(int dice[]) {
      for (int i = 0; i < dice.length - 3; i++) {
         if (dice[i] == dice[i+1] && dice[i] == dice[i+2] && dice[i] == dice[i+3]) {
            return 40;
         }
      }

      return 0;

   }   
   
   public static int checkFiveOfKind(int dice[]) {
      if (dice[0] == dice[1] && dice[0] == dice[2] && dice[0] == dice[3] && dice[0] == dice[4]) {
         return 50;
      }

      return 0;

   }        
   
   public static int checkFullHouse(int dice[]) {
      if ((dice[0] == dice[1] && dice[2] == dice[3] && dice[2] == dice[4]) ||
          (dice[0] == dice[1] && dice[0] == dice[2] && dice[3] == dice[4])) {
         return 35;
      }

      return 0;

   } 
   
   public static int checkStraight(int dice[]) {
      if ((dice[0] == 1 && dice[1] == 2 && dice[2] == 3 && dice[3] == 4 && dice[4] == 5) ||
          (dice[0] == 2 && dice[1] == 3 && dice[2] == 4 && dice[3] == 5 && dice[4] == 6)) {
         return 45;
      }

      return 0;

   }   
}
